"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/layout",{

/***/ "(app-pages-browser)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSupabaseClient: () => (/* binding */ createSupabaseClient),\n/* harmony export */   ensureUserExists: () => (/* binding */ ensureUserExists),\n/* harmony export */   skipUserTableValidation: () => (/* binding */ skipUserTableValidation),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   validateAuthenticatedUser: () => (/* binding */ validateAuthenticatedUser)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-helpers-nextjs */ \"(app-pages-browser)/./node_modules/@supabase/auth-helpers-nextjs/dist/index.js\");\n/* harmony import */ var _supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__);\n\n\n// Suas credenciais reais do Supabase\nconst supabaseUrl = 'https://nshclggtfexkxetlccuc.supabase.co';\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5zaGNsZ2d0ZmV4a3hldGxjY3VjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM3MjE0NzYsImV4cCI6MjA2OTI5NzQ3Nn0.5kQevhQz6o25ZaTQjQP-LDnlUX2mlxn7i4IGisac5Jc';\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(supabaseUrl, supabaseAnonKey);\nconst createSupabaseClient = ()=>{\n    return (0,_supabase_auth_helpers_nextjs__WEBPACK_IMPORTED_MODULE_0__.createClientComponentClient)({\n        supabaseUrl,\n        supabaseKey: supabaseAnonKey\n    });\n};\n// Função para verificar usuário sem tentar criar na tabela users\nconst ensureUserExists = async (authUser)=>{\n    if (!(authUser === null || authUser === void 0 ? void 0 : authUser.id)) return false;\n    try {\n        console.log('Verificando usuário autenticado:', authUser.id, authUser.email);\n        // Simplesmente verificar se existe, sem tentar criar\n        const { data: existingUser } = await supabase.from('users').select('id').eq('id', authUser.id).single();\n        if (existingUser) {\n            console.log('Usuário encontrado na tabela users:', existingUser.id);\n        } else {\n            console.log('Usuário não encontrado na tabela users, mas continuando com usuário autenticado');\n        }\n        return true;\n    } catch (error) {\n        console.warn('Aviso ao verificar usuário:', error);\n        // Retornar true mesmo com erro, pois o usuário autenticado existe\n        return true;\n    }\n};\n// Função alternativa que simplesmente valida se o usuário está autenticado\nconst validateAuthenticatedUser = (authUser)=>{\n    if (!(authUser === null || authUser === void 0 ? void 0 : authUser.id)) {\n        console.error('Usuário não autenticado');\n        return false;\n    }\n    console.log('Usuário autenticado:', authUser.id, authUser.email);\n    return true;\n};\n// Função que ignora completamente a tabela users e só valida autenticação\nconst skipUserTableValidation = (authUser)=>{\n    if (!(authUser === null || authUser === void 0 ? void 0 : authUser.id) || !(authUser === null || authUser === void 0 ? void 0 : authUser.email)) {\n        console.error('Dados de usuário inválidos');\n        return false;\n    }\n    console.log('Usuário válido (ignorando tabela users):', {\n        id: authUser.id,\n        email: authUser.email,\n        metadata: authUser.user_metadata\n    });\n    return true;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvc3VwYWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBcUQ7QUFDdUI7QUFFNUUscUNBQXFDO0FBQ3JDLE1BQU1FLGNBQWM7QUFDcEIsTUFBTUMsa0JBQWtCO0FBRWpCLE1BQU1DLFdBQVdKLG1FQUFZQSxDQUFDRSxhQUFhQyxpQkFBaUI7QUFFNUQsTUFBTUUsdUJBQXVCO0lBQ2xDLE9BQU9KLDBGQUEyQkEsQ0FBQztRQUNqQ0M7UUFDQUksYUFBYUg7SUFDZjtBQUNGLEVBQUU7QUFFRixpRUFBaUU7QUFDMUQsTUFBTUksbUJBQW1CLE9BQU9DO0lBQ3JDLElBQUksRUFBQ0EscUJBQUFBLCtCQUFBQSxTQUFVQyxFQUFFLEdBQUUsT0FBTztJQUUxQixJQUFJO1FBQ0ZDLFFBQVFDLEdBQUcsQ0FBQyxvQ0FBb0NILFNBQVNDLEVBQUUsRUFBRUQsU0FBU0ksS0FBSztRQUUzRSxxREFBcUQ7UUFDckQsTUFBTSxFQUFFQyxNQUFNQyxZQUFZLEVBQUUsR0FBRyxNQUFNVixTQUNsQ1csSUFBSSxDQUFDLFNBQ0xDLE1BQU0sQ0FBQyxNQUNQQyxFQUFFLENBQUMsTUFBTVQsU0FBU0MsRUFBRSxFQUNwQlMsTUFBTTtRQUVULElBQUlKLGNBQWM7WUFDaEJKLFFBQVFDLEdBQUcsQ0FBQyx1Q0FBdUNHLGFBQWFMLEVBQUU7UUFDcEUsT0FBTztZQUNMQyxRQUFRQyxHQUFHLENBQUM7UUFDZDtRQUVBLE9BQU87SUFDVCxFQUFFLE9BQU9RLE9BQU87UUFDZFQsUUFBUVUsSUFBSSxDQUFDLCtCQUErQkQ7UUFDNUMsa0VBQWtFO1FBQ2xFLE9BQU87SUFDVDtBQUNGLEVBQUU7QUFFRiwyRUFBMkU7QUFDcEUsTUFBTUUsNEJBQTRCLENBQUNiO0lBQ3hDLElBQUksRUFBQ0EscUJBQUFBLCtCQUFBQSxTQUFVQyxFQUFFLEdBQUU7UUFDakJDLFFBQVFTLEtBQUssQ0FBQztRQUNkLE9BQU87SUFDVDtJQUVBVCxRQUFRQyxHQUFHLENBQUMsd0JBQXdCSCxTQUFTQyxFQUFFLEVBQUVELFNBQVNJLEtBQUs7SUFDL0QsT0FBTztBQUNULEVBQUU7QUFFRiwwRUFBMEU7QUFDbkUsTUFBTVUsMEJBQTBCLENBQUNkO0lBQ3RDLElBQUksRUFBQ0EscUJBQUFBLCtCQUFBQSxTQUFVQyxFQUFFLEtBQUksRUFBQ0QscUJBQUFBLCtCQUFBQSxTQUFVSSxLQUFLLEdBQUU7UUFDckNGLFFBQVFTLEtBQUssQ0FBQztRQUNkLE9BQU87SUFDVDtJQUVBVCxRQUFRQyxHQUFHLENBQUMsNENBQTRDO1FBQ3RERixJQUFJRCxTQUFTQyxFQUFFO1FBQ2ZHLE9BQU9KLFNBQVNJLEtBQUs7UUFDckJXLFVBQVVmLFNBQVNnQixhQUFhO0lBQ2xDO0lBRUEsT0FBTztBQUNULEVBQUUiLCJzb3VyY2VzIjpbIkU6XFxEZXNlbnZvbHZpbWVudG9cXGdlcmVuY2lhZG9ydGFyZWZhc1xcc3JjXFxsaWJcXHN1cGFiYXNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRDb21wb25lbnRDbGllbnQgfSBmcm9tICdAc3VwYWJhc2UvYXV0aC1oZWxwZXJzLW5leHRqcyc7XG5cbi8vIFN1YXMgY3JlZGVuY2lhaXMgcmVhaXMgZG8gU3VwYWJhc2VcbmNvbnN0IHN1cGFiYXNlVXJsID0gJ2h0dHBzOi8vbnNoY2xnZ3RmZXhreGV0bGNjdWMuc3VwYWJhc2UuY28nO1xuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gJ2V5SmhiR2NpT2lKSVV6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpwYzNNaU9pSnpkWEJoWW1GelpTSXNJbkpsWmlJNkltNXphR05zWjJkMFptVjRhM2hsZEd4alkzVmpJaXdpY205c1pTSTZJbUZ1YjI0aUxDSnBZWFFpT2pFM05UTTNNakUwTnpZc0ltVjRjQ0k2TWpBMk9USTVOelEzTm4wLjVrUWV2aFF6Nm8yNVphVFFqUVAtTERubFVYMm1seG43aTRJR2lzYWM1SmMnO1xuXG5leHBvcnQgY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnQoc3VwYWJhc2VVcmwsIHN1cGFiYXNlQW5vbktleSk7XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVTdXBhYmFzZUNsaWVudCA9ICgpID0+IHtcbiAgcmV0dXJuIGNyZWF0ZUNsaWVudENvbXBvbmVudENsaWVudCh7XG4gICAgc3VwYWJhc2VVcmwsXG4gICAgc3VwYWJhc2VLZXk6IHN1cGFiYXNlQW5vbktleVxuICB9KTtcbn07XG5cbi8vIEZ1bsOnw6NvIHBhcmEgdmVyaWZpY2FyIHVzdcOhcmlvIHNlbSB0ZW50YXIgY3JpYXIgbmEgdGFiZWxhIHVzZXJzXG5leHBvcnQgY29uc3QgZW5zdXJlVXNlckV4aXN0cyA9IGFzeW5jIChhdXRoVXNlcjogYW55KSA9PiB7XG4gIGlmICghYXV0aFVzZXI/LmlkKSByZXR1cm4gZmFsc2U7XG5cbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZygnVmVyaWZpY2FuZG8gdXN1w6FyaW8gYXV0ZW50aWNhZG86JywgYXV0aFVzZXIuaWQsIGF1dGhVc2VyLmVtYWlsKTtcbiAgICBcbiAgICAvLyBTaW1wbGVzbWVudGUgdmVyaWZpY2FyIHNlIGV4aXN0ZSwgc2VtIHRlbnRhciBjcmlhclxuICAgIGNvbnN0IHsgZGF0YTogZXhpc3RpbmdVc2VyIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ3VzZXJzJylcbiAgICAgIC5zZWxlY3QoJ2lkJylcbiAgICAgIC5lcSgnaWQnLCBhdXRoVXNlci5pZClcbiAgICAgIC5zaW5nbGUoKTtcblxuICAgIGlmIChleGlzdGluZ1VzZXIpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdVc3XDoXJpbyBlbmNvbnRyYWRvIG5hIHRhYmVsYSB1c2VyczonLCBleGlzdGluZ1VzZXIuaWQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZygnVXN1w6FyaW8gbsOjbyBlbmNvbnRyYWRvIG5hIHRhYmVsYSB1c2VycywgbWFzIGNvbnRpbnVhbmRvIGNvbSB1c3XDoXJpbyBhdXRlbnRpY2FkbycpO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUud2FybignQXZpc28gYW8gdmVyaWZpY2FyIHVzdcOhcmlvOicsIGVycm9yKTtcbiAgICAvLyBSZXRvcm5hciB0cnVlIG1lc21vIGNvbSBlcnJvLCBwb2lzIG8gdXN1w6FyaW8gYXV0ZW50aWNhZG8gZXhpc3RlXG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG5cbi8vIEZ1bsOnw6NvIGFsdGVybmF0aXZhIHF1ZSBzaW1wbGVzbWVudGUgdmFsaWRhIHNlIG8gdXN1w6FyaW8gZXN0w6EgYXV0ZW50aWNhZG9cbmV4cG9ydCBjb25zdCB2YWxpZGF0ZUF1dGhlbnRpY2F0ZWRVc2VyID0gKGF1dGhVc2VyOiBhbnkpID0+IHtcbiAgaWYgKCFhdXRoVXNlcj8uaWQpIHtcbiAgICBjb25zb2xlLmVycm9yKCdVc3XDoXJpbyBuw6NvIGF1dGVudGljYWRvJyk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIFxuICBjb25zb2xlLmxvZygnVXN1w6FyaW8gYXV0ZW50aWNhZG86JywgYXV0aFVzZXIuaWQsIGF1dGhVc2VyLmVtYWlsKTtcbiAgcmV0dXJuIHRydWU7XG59O1xuXG4vLyBGdW7Dp8OjbyBxdWUgaWdub3JhIGNvbXBsZXRhbWVudGUgYSB0YWJlbGEgdXNlcnMgZSBzw7MgdmFsaWRhIGF1dGVudGljYcOnw6NvXG5leHBvcnQgY29uc3Qgc2tpcFVzZXJUYWJsZVZhbGlkYXRpb24gPSAoYXV0aFVzZXI6IGFueSkgPT4ge1xuICBpZiAoIWF1dGhVc2VyPy5pZCB8fCAhYXV0aFVzZXI/LmVtYWlsKSB7XG4gICAgY29uc29sZS5lcnJvcignRGFkb3MgZGUgdXN1w6FyaW8gaW52w6FsaWRvcycpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBcbiAgY29uc29sZS5sb2coJ1VzdcOhcmlvIHbDoWxpZG8gKGlnbm9yYW5kbyB0YWJlbGEgdXNlcnMpOicsIHtcbiAgICBpZDogYXV0aFVzZXIuaWQsXG4gICAgZW1haWw6IGF1dGhVc2VyLmVtYWlsLFxuICAgIG1ldGFkYXRhOiBhdXRoVXNlci51c2VyX21ldGFkYXRhXG4gIH0pO1xuICBcbiAgcmV0dXJuIHRydWU7XG59OyJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJjcmVhdGVDbGllbnRDb21wb25lbnRDbGllbnQiLCJzdXBhYmFzZVVybCIsInN1cGFiYXNlQW5vbktleSIsInN1cGFiYXNlIiwiY3JlYXRlU3VwYWJhc2VDbGllbnQiLCJzdXBhYmFzZUtleSIsImVuc3VyZVVzZXJFeGlzdHMiLCJhdXRoVXNlciIsImlkIiwiY29uc29sZSIsImxvZyIsImVtYWlsIiwiZGF0YSIsImV4aXN0aW5nVXNlciIsImZyb20iLCJzZWxlY3QiLCJlcSIsInNpbmdsZSIsImVycm9yIiwid2FybiIsInZhbGlkYXRlQXV0aGVudGljYXRlZFVzZXIiLCJza2lwVXNlclRhYmxlVmFsaWRhdGlvbiIsIm1ldGFkYXRhIiwidXNlcl9tZXRhZGF0YSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/supabase.ts\n"));

/***/ })

});